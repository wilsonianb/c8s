apiVersion: v1
kind: ConfigMap
metadata:
  name: config-domain
  namespace: knative-serving
data:
  codius.example.com: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-network
  namespace: knative-serving
  labels:
    serving.knative.dev/release: devel

data:
  domainTemplate: "{{.Name}}.{{.Domain}}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-domain
  namespace: knative-serving
data:
  example.com: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-network
  namespace: knative-serving
  labels:
    serving.knative.dev/release: devel

data:
  domainTemplate: "{{.Name}}.{{.Domain}}"
---
apiVersion: v1
kind: Namespace
metadata:
  name: c8s-untrusted
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  namespace: c8s-untrusted
  name: c8s-untrusted
spec:
  policyTypes:
  - Egress
  podSelector: {}
  egress:
  - to:
    - ipBlock:
       cidr: 0.0.0.0/0
       except:
       - 10.0.0.0/8
       - 172.16.0.0/12
       - 192.168.0.0/16
---
apiVersion: v1
kind: Namespace
metadata:
  name: c8s
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: c8s
  namespace: c8s
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: c8s
  namespace: c8s-untrusted
rules:
- apiGroups: ["serving.knative.dev"]
  resources: ["services"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: c8s
  namespace: c8s-untrusted
subjects:
- kind: ServiceAccount
  name: c8s
  namespace: c8s
roleRef:
  kind: Role
  name: c8s
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: c8s
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: c8s
subjects:
- kind: ServiceAccount
  name: c8s
  namespace: c8s
roleRef:
  kind: ClusterRole
  name: c8s
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: c8s-untrusted
  namespace: c8s-untrusted
automountServiceAccountToken: false
---
apiVersion: serving.knative.dev/v1alpha1
kind: Service
metadata:
  name: c8s
  namespace: c8s
  labels:
    app: c8s
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
      labels:
        app: c8s
    spec:
      containers:
      - image: wilsonianbcoil/c8s
        env:
        - name: CODIUS_PUBLIC_URI
          value: https://codius.example.com
        - name: DEBUG
          value: "*c8s*,-*trace*"
        - name: CODIUS_BIND_IP
          value: "0.0.0.0"
        - name: CODIUS_K8S_NAMESPACE
          value: c8s-untrusted
        - name: CODIUS_K8S_SERVICE_ACCOUNT
          value: c8s-untrusted
        - name: CODIUS_PAYMENT_POINTER
          value: $example.com/codius
        - name: NODE_ENV
          value: production
        ports:
        - containerPort: 3000
      serviceAccountName: c8s
